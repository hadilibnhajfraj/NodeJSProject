<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: space-between;
        }

        nav {
            width: 200px;
            background-color: #2c3e50;
            padding: 10px;
            position: fixed;
            height: 100%;
            overflow: auto;
            display: flex;
            flex-direction: column;
            align-items: left;
        }

        nav a {
            display: block;
            color: #ecf0f1;
            padding: 14px 8px;
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

        nav a:hover {
            background-color: #3498db;
        }

        section {
            /*width: calc(100% - 220px);*/
            /* Calcule la largeur restante après avoir réservé 220px pour la navigation */
            padding: 16px;
            flex-grow: 1;
            margin-left: 220px;
            /* Ajout de cette marge pour aligner correctement le contenu */
            overflow-x: auto;
            /* Ajout du défilement horizontal si nécessaire */
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table,
        th,
        td {
            border: 1px solid #ddd;
        }

        th,
        td {
            padding: 15px;
            text-align: left;
        }

        h2 {
            color: #2c3e50;
        }
    </style>
    <script src="/socket.io/socket.io.js"></script>

</head>

<body>

    <section>
        <h2>Gestion des donnations</h2>
        <input type="text" id="id">
        <table>
            <thead>
                <tr>
                    <th>Operation</th>
                    <th>Patient</th>
                    <th>Date</th>
                    <th>Notes</th>
                </tr>
            </thead>
            <tbody id="donnationID"></tbody>
        </table>
    </section>
    <script>
        const socket = io.connect();
        const params = new URLSearchParams(window.location.search);
        const data = params.get('id');

        document.addEventListener('DOMContentLoaded', function () {
            // Récupérez les paramètres de l'URL
            const params = new URLSearchParams(window.location.search);

            document.getElementById('id').value = data;
            // Remplacez l'URL actuelle sans ajouter d'entrée dans l'historique du navigateur
            const newURL = window.location.pathname;
            history.replaceState({}, document.title, newURL);
        });

        socket.on('suivieaffiche', function (data) {
            console.log('Data received:', data);
            console.log('ID received on server:', data);
            const tbody = document.getElementById('donnationID');
            tbody.innerHTML = '';  // Effacez le contenu actuel du tbody

            // Vérifiez si data est un objet
            if (data !== null && typeof data === 'object') {
                // Ajoutez les propriétés à une seule ligne
                const row = tbody.insertRow();
                const cell1 = row.insertCell(0);
                const cell2 = row.insertCell(1);
                const cell3 = row.insertCell(2);
                const cell4 = row.insertCell(3);
                cell1.textContent = data.Operation;
                cell2.textContent = data.Patient;
                // Formattez la date si nécessaire
                cell3.textContent = new Intl.DateTimeFormat('fr-FR').format(new Date(data.date));
                cell4.textContent = data.Notes;
            } else {
                console.error('Invalid data format:', data);
                // Ajoutez ici la logique pour afficher un message d'erreur à l'utilisateur
            }
        });




        // Émettez l'événement 'aff' pour demander au serveur d'envoyer les données
        socket.emit('suivieaffiche',data);

    </script>


</body>

</html>